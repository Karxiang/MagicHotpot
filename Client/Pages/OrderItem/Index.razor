@page "/orderItems/"
@inject HttpClient _client
@inject IJSRuntime js
@attribute [Authorize]

<h3 class"card-title">OrderItems</h3>
<br />

@if (OrderItems == null)
{
    <div class="alert alert-info">Loading OrderItems...</div>
}
else
{
    <table class="table table-responsive">
        <thead>
            <tr>
                <th>
                    <th>OrderItem Id</th>
                    <th>Party Size</th>
                    <th>Dining Type</th>
                    <th>Note</th>
                    <th>Customer Name</th>
                    <th>Branch Id</th>
                    <th>BookDate</th>
                </th>
            </tr>
        </thead>
        <tbody>
            @foreach (var orderItem in OrderItems)
            {
                <tr>
                    <td>@orderItem.Food</td>
                    <td>
                        <a href="/orderItem/view/@orderItem.Id" class="btn btn-primary">
                            <span class="oi oi-book"></span>
                        </a>

                        <a href="/orderItem/edit/@orderItem.Id" class="btn btn-primary">
                            <span class="oi oi-pencil"></span>
                        </a>

                        <button class="btn btn-primary" @onclick="@(()=>Delete(orderItem.Id))">
                            <span class="oi oi-delete"></span>
                        </button>
                    </td>
                </tr>
            }
        </tbody>
    </table>
}





@code {
    private List<OrderItem>? OrderItems;

    protected async override Task OnInitializedAsync()
    {
        OrderItems = await _client.GetFromJsonAsync<List<OrderItem>>("api/orderItems");
        OrderItems = await _client.GetFromJsonAsync<List<OrderItem>>($"{Endpoints.OrderItemsEndpoint}");
    }

    async Task Delete(int orderItemId)
    {
        if (OrderItems != null)
        {
            var orderItem = OrderItems.First(q => q.Id == orderItemId);
            var confirm = await js.InvokeAsync<bool>("confirm", $"Do you want to delete {orderItem.Id}?");
            if (confirm)
            {
                await _client.DeleteAsync($"{Endpoints.OrderItemsEndpoint}/{orderItemId}");
                await OnInitializedAsync();
            }
        }
    }

}